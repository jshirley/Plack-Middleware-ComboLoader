# NAME

Plack::Middleware::ComboLoader - Handle combination loading and processing of on-disk resources.

# VERSION

version 0.01

# SYNOPSIS

    use Plack::Builder;

    builder {
        enable "ComboLoader",
            roots => {
                'yui3'         => 'yui3/',
                'yui3-gallery' => 'yui3-gallery/',
                'our-gallery'  => 'our-gallery/',
                # Or, if you want to run each file through something:
                '/static/css' => {
                    path      => 'static/css',
                    processor => sub {
                        # $_ isa Path::Class::File object
                        JavasSript::Minify::minify( input => $_->slurp );
                        # This method returns a *string*
                    }
                }
            },
            # Optional parameter to save generated files to this path:
            # If the file is there and it's not too old, it gets served.
            # If it is too old (the expires below), it will be regenerated
            save => 'static/combined',
            expires => 86400, # Keep files around for a day.
        $app;
    };

# DESCRIPTION

This is (another) combination loader for static resources. This is designed to
operate with the YUI3 Loader Service.

You can specify multiple points, and if all files are of the same type it sets
the mime-type and all proper caching headers for the browser.

The incoming requests will look like:

    http://my.cdn.com/rootName?3.4.1/build/module/module.js&3.4.1/build/module2/module2.js

The rootName specifies the path on disk, and each query arg is a file under the
path.

# PROCESSING FILES

I highly recommend doing minifying and building prior to any serving. This way
files stay on disk, unmodified and perform better.  If, however, you want to
do any processing (like compiling templates into JavaScript, a la Handlebars)
you can do that.

Use the `processor` option, you can munge your files however you wish.

The sub is passed in a [Path::Class::File](http://search.cpan.org/perldoc?Path::Class::File) object, and should return a string.

Whatever return value is appended to the output buffer and sent to the client.

# AUTHOR

J. Shirley <j@shirley.im>

# COPYRIGHT AND LICENSE

This software is copyright (c) 2011 by Infinity Interactive, Inc.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.